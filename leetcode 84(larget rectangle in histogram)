Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.
Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.

****************************************************solution*****************************************************

int largestRectangleArea(vector<int>& height) {
        int n=height.size();
        vector<int>left(n);
        vector<int>right(n);
        //to find left limit
        stack<int>st;
        for(int i=0;i<n;i++){
            if(st.empty()){
                st.push(i);
                left[i]=0;
            }
            while(!st.empty() && height[i]<=height[st.top()])
                st.pop();
            if(st.empty())
                left[i]=0;
            else
                left[i]=st.top()+1;
            st.push(i);
        }
        while(!st.empty())
            st.pop();
        for(int i=n-1;i>=0;i--){
            if(st.empty()){
                st.push(i);
                right[i]=n-1;
            }
            while(!st.empty()&& height[i]<=height[st.top()])
                st.pop();
            if(st.empty())
                right[i]=n-1;
            else
                right[i]=st.top()-1;
            st.push(i);
        }
        int max=0;
        for(int i=0;i<n;i++){
            max=std::max(max,height[i]*(right[i]-left[i]+1));
        }
        return max;
    }
};
