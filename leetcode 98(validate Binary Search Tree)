Given the root of a binary tree, determine if it is a valid binary search tree (BST).

A valid BST is defined as follows:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.

*******************solution************************

class Solution {
public:
    vector<int> ans;
    void check(TreeNode *root){
        if(root==NULL)
            return;
        check(root->left);
        ans.push_back(root->val);
        check(root->right);
    }
    bool isValidBST(TreeNode* root) {
        check(root);
        for(int i=1;i<ans.size();i++){
            if(ans[i-1]>=ans[i])
                return false;
        }
        return true;
    }
};
