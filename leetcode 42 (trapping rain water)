Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

 

Example 1:


Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.

**********************************solution******************************

class Solution {
public:
    int trap(vector<int>& height) {
        int n=height.size();
        vector<int> left_max(n);
        vector<int> right_max(n);
        left_max[0]=height[0];
        int ans=0;
        for(int i=1;i<n;i++){
            left_max[i]=std::max(left_max[i-1],height[i]);
        }
        right_max[n-1]=height[n-1];
        for(int i=n-2;i>=0;i--){
            right_max[i]=max(height[i],right_max[i+1]);
        }
        for(int i=0;i<n;i++){
            int temp=min(left_max[i],right_max[i])-height[i];
            if(temp>0)
                ans+=temp;
            else
                continue;
        }
        return ans;
    }
};
