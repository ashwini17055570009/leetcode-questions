Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

 

Example 1:


Input: root = [1,2,2,3,4,4,3]
Output: true

****************************************solution********************************

class Solution {
public:
    bool isSameTree(TreeNode* l,TreeNode* r){
        if(!l && !r)
            return true;
        if((!l && r!=NULL)||(!r && l!=NULL))
            return false;
        if(l->val!=r->val)
            return false;
        return isSameTree(l->left,r->right)&&isSameTree(l->right,r->left);
    }
    bool isSymmetric(TreeNode* root) {
        if(!root)
            return true;
        if(!root->left&&!root->right)
            return true;
        return isSameTree(root->left,root->right);
    }
};
