Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted.

A string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet.

 

Example 1:

Input: n = 1
Output: 5
Explanation: The 5 sorted strings that consist of vowels only are ["a","e","i","o","u"].
Example 2:

Input: n = 2
Output: 15
Explanation: The 15 sorted strings that consist of vowels only are
["aa","ae","ai","ao","au","ee","ei","eo","eu","ii","io","iu","oo","ou","uu"].
Note that "ea" is not a valid string since 'e' comes after 'a' in the alphabet.

*************************************solution*********************************

class Solution {
public:
    int countVowelStrings(int n) {
        vector<vector<int>> dp(5,vector<int>(n,1));
        for(int i=1;i<n;i++){
            dp[0][i]=dp[0][i-1];
            dp[1][i]=dp[0][i-1]+dp[1][i-1];
            dp[2][i]=dp[0][i-1]+dp[1][i-1]+dp[2][i-1];
            dp[3][i]=dp[0][i-1]+dp[1][i-1]+dp[2][i-1]+dp[3][i-1];
            dp[4][i]=dp[0][i-1]+dp[1][i-1]+dp[2][i-1]+dp[3][i-1]+dp[4][i-1];
        }
        int ans=0;
        for(int i=0;i<5;i++){
            ans+=dp[i][n-1];
        }
        return ans;
    }
};
